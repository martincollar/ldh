<?php

/*
 *
 */


/**
 * function ldh_cont
 */
function ldh_container() {
  $out['#type'] = 'container';
}

/**
 * array for html tag
 */
function ldh_tagar($val, $tag = 'div') {
  $out = array();
  $out['#tag'] = $tag;
  $out['#type'] = 'html_tag';
  $out['#value'] = $val;
  return $out;
}

/**
 * function ldh_addclass
 */
function ldh_addclass(&$ar, $cl) {
  // check if the attributes are present
  // check if its an array
  // check if it contains classes ()
  // check if the parameter is an array
  $ar['#attributes']['class'][] = $cl;

}

function ldh_setid(&$ar, $id) {
  $ar['#attributes']['id'] = $id;
}

function ldh_setstyle(&$ar, $st) {
  $ar['#attributes']['style'] = $st;
}

function ldh_efq($bundle, $entityType = 'node'){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', $entityType)
    ->entityCondition('bundle', $bundle);
  return $query;
}

function ldh_pi($bundle, $entityType = 'node') {
  $ent = entity_create($entityType, array('type' => $bundle));
  $nw = entity_metadata_wrapper($entityType, $ent);
  $pinfo = $nw->getPropertyInfo();
  return $pinfo;
}

function ldh_taxo_addp($term, $vocname, $parent) {

}

function ldh_taxo_add($term, $vocname, $parentid = 0) {
  // find vid
  $voc = taxonomy_vocabulary_machine_name_load($vocname);
  // create array
  // return tid
  $t = array(
    'vid' => $voc->vid,
    'name' => $term,
  );
  if ($parentid) {
    $t['parent'] = $parentid;
  }
  $term = (object) $t;
  taxonomy_term_save($term);
  return $term->tid;
}

/**
 * node wrapper
 *
 * @param integer $id
 * nid of the node to load
 *
 * @return EntityMetadataWrapper
 * http://drupalcontrib.org/api/drupal/contributions%21entity%21includes%21entity.wrapper.inc/class/EntityMetadataWrapper/7
 */
function ldh_nw($id) {
  $node = node_load($id);
  return entity_metadata_wrapper('node',$node);
}


function ldh_create($bundle, $entityType = 'node') {
  $ent = entity_create($entityType, array('type' => $bundle));
  $ew = entity_metadata_wrapper($entityType, $ent);
  return $ew;
}
